#!/bin/bash

confirm() {
	while true
	do
		read CONFIRM
		case $CONFIRM in
			y|Y|YES|yes|Yes) break ;;
			n|N|no|NO|No)
				echo Aborting
				exit
				;;
			*) echo Please enter only y or n
		esac
	done
}

if [ $# -ne 3 ]
then
	echo "Usage: $0 <compiled-McErlang-dir> <target-dir> <version>"
	exit 0
fi

# Source distribution
SRC=$1

# Target
TRG=$2

# Version
VER=$3

if [ ! -d $SRC ]
then
	echo "$SRC does not exist, aborting!"
	exit 0
fi

#TRGDIR="$TRG/McErlang_version_$VER"
TRGDIR="$TRG"
echo "Will assemble release in $TRGDIR"

if [ -d $TRGDIR ]
then 
	echo -n "Warning: $TRGDIR already exists, overwrite [y/N]? "
	confirm
	rm -rf $TRGDIR
fi

mkdir $TRGDIR
if [ ! -d $TRGDIR ]
then 
	echo "Could not create $TRGDIR, aborting!"
	exit 1
fi

pushd $SRC
ABSSRCDIR=`pwd`
popd

pushd $TRGDIR
ABSTRGDIR=`pwd`
TRGDIR2=mcerlang-$VER
mkdir $TRGDIR2
pushd $TRGDIR2
ABSTRGDIR2=`pwd`

mkdir ebin
mkdir src
mkdir doc
mkdir private
mkdir include
mkdir examples

cp ${ABSSRCDIR}/Ltl2Buchi/ebin/*.beam ebin
cp ${ABSSRCDIR}/Ltl2Buchi_glue/ebin/*.beam ebin
cp ${ABSSRCDIR}/app/ebin/*.beam ebin
cp ${ABSSRCDIR}/behaviours/ebin/*.beam ebin
cp ${ABSSRCDIR}/algorithms/ebin/*.beam ebin
cp ${ABSSRCDIR}/abstractions/ebin/*.beam ebin
cp ${ABSSRCDIR}/schedulers/ebin/*.beam ebin
cp ${ABSSRCDIR}/monitors/ebin/*.beam ebin
cp ${ABSSRCDIR}/tables/ebin/*.beam ebin
cp ${ABSSRCDIR}/stacks/ebin/*.beam ebin
cp ${ABSSRCDIR}/languages/erlang/ebin/*.beam ebin
cp ${ABSSRCDIR}/ebin/*.beam ebin

cp $ABSSRCDIR/src/include/*.hrl include 
cp $ABSSRCDIR/configuration/funinfo.txt include 

mkdir -p include/erlang/
cp $ABSSRCDIR/languages/erlang/src/include/*.hrl include/erlang/

mkdir -p src/lib/erlang
pushd $ABSSRCDIR/lib/erlang
find . | grep -v '/\.svn' | cpio -dump $ABSTRGDIR2/src/lib/erlang
popd

cp $ABSSRCDIR/app/ebin/mcerlang.app ebin 

mkdir -p examples/Simple_messenger
pushd $ABSSRCDIR/examples/Simple_messenger
find . | grep -v '/\.svn' | cpio -dump $ABSTRGDIR2/examples/Simple_messenger
popd

cp $ABSSRCDIR/doc/eqc_mcerlang_tutorial.pdf doc
cp $ABSSRCDIR/doc/tutorial/tutorial.pdf doc
cp $ABSSRCDIR/doc/userManual/userManual.pdf doc

mkdir -p doc/edoc
pushd $ABSSRCDIR/doc/edoc
find . | grep -v '/\.svn' | cpio -dump $ABSTRGDIR2/doc/edoc
popd

#popd
cp $ABSSRCDIR/bininst/README .
cp $ABSSRCDIR/bininst/LICENCING .
cp $ABSSRCDIR/bininst/NEWS .
cp $ABSSRCDIR/bininst/INSTALLATION .
cp $ABSSRCDIR/bininst/mcerl_compiler .
cp $ABSSRCDIR/bininst/mcerlang_install.beam .

echo "Done!"